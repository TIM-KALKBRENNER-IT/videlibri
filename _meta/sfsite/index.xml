<file>
<title>Alle Bibliotheken und Büchereien in einer App</title>

<head>
  <meta name="keywords" content="bibliothek, bibliotheken, opac, büchereien, stadtbibliothek, stadtbücherei, düsseldorf" />

<?php
//from http://stackoverflow.com/questions/3770513/detect-browser-language-in-php

// parse list of comma separated language tags and sort it by the quality value
function parseLanguageList($languageList) {
    if (is_null($languageList)) {
        if (!isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {
            return array();
        }
        $languageList = $_SERVER['HTTP_ACCEPT_LANGUAGE'];
    }
    $languages = array();
    $languageRanges = explode(',', trim($languageList));
    foreach ($languageRanges as $languageRange) {
        if (preg_match('/(\*|[a-zA-Z0-9]{1,8}(?:-[a-zA-Z0-9]{1,8})*)(?:\s*;\s*q\s*=\s*(0(?:\.\d{0,3})|1(?:\.0{0,3})))?/', trim($languageRange), $match)) {
            if (!isset($match[2])) {
                $match[2] = '1.0';
            } else {
                $match[2] = (string) floatval($match[2]);
            }
            if (!isset($languages[$match[2]])) {
                $languages[$match[2]] = array();
            }
            $languages[$match[2]][] = strtolower($match[1]);
        }
    }
    krsort($languages);
    return $languages;
}

// compare two parsed arrays of language tags and find the matches
function findMatches($accepted, $available) {
    $matches = array();
    $any = false;
    foreach ($accepted as $acceptedQuality => $acceptedValues) {
        $acceptedQuality = floatval($acceptedQuality);
        if ($acceptedQuality === 0.0) continue;
        foreach ($available as $availableQuality => $availableValues) {
            $availableQuality = floatval($availableQuality);
            if ($availableQuality === 0.0) continue;
            foreach ($acceptedValues as $acceptedValue) {
                if ($acceptedValue === '*') {
                    $any = true;
                }
                foreach ($availableValues as $availableValue) {
                    $matchingGrade = matchLanguage($acceptedValue, $availableValue);
                    if ($matchingGrade > 0) {
                        $q = (string) ($acceptedQuality * $availableQuality * $matchingGrade);
                        if (!isset($matches[$q])) {
                            $matches[$q] = array();
                        }
                        if (!in_array($availableValue, $matches[$q])) {
                            $matches[$q][] = $availableValue;
                        }
                    }
                }
            }
        }
    }
    if (count($matches) === 0 && $any) {
        $matches = $available;
    }
    krsort($matches);
    return $matches;
}

// compare two language tags and distinguish the degree of matching
function matchLanguage($a, $b) {
    $a = explode('-', $a);
    $b = explode('-', $b);
    for ($i=0, $n=min(count($a), count($b)); $i<$n; $i++) {
        if ($a[$i] !== $b[$i]) break;
    }
    return $i === 0 ? 0 : (float) $i / count($a);
}

$accepted = parseLanguageList($_SERVER['HTTP_ACCEPT_LANGUAGE']);
$available = parseLanguageList('en, de, DE');
$matches = findMatches($accepted, $available);
if (count($matches) == 0 || count(reset($matches)) == 0 || (reset(reset($matches)) != "de" && reset(reset($matches)) != "DE"))
  print ("<style>#navigation a.enlink { text-decoration: blink; font-weight: bold; color: #AA0000} </style>");
  //$
??>
  
</head>

<prequel>
VideLibri schützt einen seit 2006 davor bei Ausleihen aus einer öffentlichen Bücherei<!-- oder wissenschaftlicher Bibliothek-->, die Abgabefrist zu verpassen.<!-- Auch Katalogsuchen sind möglich.-->
</prequel>

<content title="Features">

VideLibri hat folgende Vorteile gegenüber den normalen Web-Katalogen der Büchereien:
<ul class="f1list">
<li><h3>Automatische Verlängerung</h3>
VideLibri verlängert alle ausgeliehenen Bücher automatisch, so dass man die Verlängerung nicht vergessen kann. 
</li>
<li><h3>Zuverlässige Benachrichtigung über Ausleihfristen</h3>
VideLibri warnt vor ablaufenden Leihfristen und ist dabei zuverlässiger als die Benachrichtigungen der Bibliotheken. <br/>
Bei  Benachrichtigungsmails von der Bibliothek gibt es mehrere Fehlerquellen, der Bibliotheksserver muss die E-Mail wirklich versenden, der eigene Mailserver muss die E-Mail empfangen ohne sie in den Spamorder zu schieben, und das Mailprogramm muss die E-Mail anzeigen. VideLibri dagegen lädt die Abgabefristen einmal herunter und zeigt sie dann immer an ohne irgendwelche Server zu involvieren. Selbst wenn der Bibliotheksserver  nicht mehr funktioniert oder wegen Wartungsarbeiten abgeschaltet ist, wird man immer noch vor den alten ablaufenden Leihfristen gewarnt. Da Leihfristen nur verlängert und nicht verkürzt werden, ist somit der schlimmste Fall, dass man mehr Warnungen als nötig angezeigt bekommt.
</li>
<li><h3>Kein permanenter Internetzugang nötig</h3>
Um die Webseite eines OPAC aufzurufen, muss man immer eine Internetverbindung haben. VideLibri dagegen speichert  alle ausgeliehenen Bücher auf der eigenen Festplatte, so dass man den nächsten Abgabefristtermin auch sehen kann, wenn man gerade keine Internetverbindung hat oder der OPAC wegen Wartungsarbeiten abgeschaltet ist.
</li>
<li><h3>Gesamthistorie aller Ausleihen</h3>
Es speichert alle jemals ausgeliehenen Bücher, wodurch  man jederzeit nachsehen kann, wann man, welche Bücher ausgeliehen hatte. Dies ermöglicht eine Literaturverwaltung, die ein Literaturverzeichnis über alle Ausleihen führt, ohne dass man diese manuell eintragen muss.<br/>
Wenn man zudem in ein paar Jahren einen Fortsetzungsband einer Serie lesen will oder ein gelesenes Buch weiterempfehlen will, und sich nicht mehr genau erinnert, wie der Titel des Buches lautete, kann man in der Historie nachschauen und weiß es wieder. Wer diese Funktion suspekt findet, kann sie auch deaktivieren, so dass immer nur die aktuellen Ausleihen angezeigt werden.
</li>
<li><h3>Übersicht über mehrere Ausleihkonten</h3>
VideLibri zeigt die Ausleihdaten von mehreren Konten gleichzeitig an, so dass man, wenn man in mehreren Büchereien angemeldet ist, nicht jeden Katalog einzeln aufrufen muss. Auch wenn in einer mehrköpfigen Familie jeder eine eigene Ausleihkarte hat, wie von der Benutzerordnung vorgeschrieben, stellt es sicher, dass niemand/kein Kind vergessen hat, etwas abzugeben.
</li>
<li><h3>Verwaltung von nicht ausgeliehenen Büchern</h3>
Zusätzlich zu ausgeliehenen und abgegebenen Büchern lassen sich niemals-ausgeliehene Bücher aus der Katalogsuche in der Bücherliste speichern. Damit lässt sich die App zur Literaturverwaltung, als Merkliste und zur Verwaltung einer persönlichen Bibliothek verwenden.
</li>

<li><h3>Besseres Interface und Layout</h3>
VideLibri ist nach der Installation sehr viel einfacher zu benutzen, als die meisten Webkataloge/WebOPACs der Büchereien. Man muss nur einmal klicken, um die Ausleihliste zu öffnen, und braucht nicht jedes Mal sein Passwort einzugeben. Zudem werden alle Bücher farbkodiert in einer sortierbaren Liste angezeigt und die jeweiligen Abgabezeiten nach Wochen getrennt. Auch Autor und Titel werden getrennt angezeigt, im Gegensatz zu klassischen WebOPACs (wie lange von den <a class="popuplink" href="img/webopac-düsseldorf.png">Stadtbüchereien Düsseldorf</a> verwendet), die Autor und Titel zu einer Zeile zusammenwursteln, so dass man sie kaum unterscheiden kann.
</li>

<li><h3>Vollständige XQuery Unterstützung</h3>
Mittels der Datenbankabfragesprache XQuery lassen sich <a href="/help/xquerysearch.html">beliebige komplizierte Suchen</a> über die eigene Ausleihhistorie ausführen, wie zum Beispiel:
<ul>
<li>Welche meiner Ausleihen hat den längsten Titel?</li>
<li>Wer hat das Buch mit dem längsten Titel geschrieben?</li>
<li>Welches Buch wurde am häufigsten ausgeliehen?</li>
<li>Von welchem Autor/in habe ich am meisten Bücher ausgeliehen?</li>
<li>Welche Ausleihe hat das längste Wort im Titel, wenn es mehr als ein Wort im Titel gibt?</li>
<li>Welche ausgeliehenen Bücher haben denselben Autor/in, wie das Buch mit dem längsten Titel?</li>
<li>Von allen Büchern, deren Titellänge eine Primzahl ist, welches habe ich am häufigsten ausgeliehen?</li>
</ul>
</li>


<!--<li><h3>Mobile Android-Version</h3>
VideLibri läuft nativ auf Androidsystemen und bietet so eine bessere und bequemere Integration in das System als Webkataloge. 
</li>-->
<li><h3>Lokal laufende App</h3>
Im Gegensatz zu einer Webseite wie einem Bücherei-OPAC, bei dem man irgendeinem Anbieter hilflos ausgeliefert ist, kann man bei einer App wie VideLibri alles selbst entscheiden. Die Webseite kann unangekündigt abgeschaltet werden und ist dann nicht mehr nur nicht-nutzbar, sondern auch alle dort gespeicherten Daten sind weg. Eine installierte App dagegen bleibt installiert und, solange man sie nicht deinstalliert, läuft sie auch in 100 Jahren noch auf dem Gerät.<br/>
Zudem hat ein Benutzer keine Kontrolle darüber, was eine Webseite tut. Wenn zum Beispiel eine Bibliothek von einem webseitenbasierten Metakatalog nicht unterstützt wird, gibt es keine Möglichkeit über den Metakatalog auf die nicht-unterstützte Bibliothek zuzugreifen. Eine App auf dem eigenen Gerät kann man dagegen beliebig ändern und ohne Einschränkungen seine eigene Bibliothek hinzufügen. <br/> Ebenso könnte eine Webseite gehackt werden oder persönliche Daten weitergeben. Sind die Daten dagegen alle in einer lokalen App, bleiben diese auf dem lokalen Gerät und niemand Fremdes kann darauf zugreifen.
</li>

 

<li><h3>E-Mailbenachrichtigung<sup class="desktop">D</sup></h3> 
VideLibri kann einen E-Mailbericht über alle Medien erstellen, in dem fällige und nicht fällige Bücher aufgelistet sind. Der Bericht wird nicht direkt von VideLibri versandt, sondern an ein anderes Programm übergeben. Unter Linux kann dazu das Standardprogramm <code>sendmail</code> verwendet werden, wodurch es nicht nötig ist, in VideLibri das Passwort für den Mailserver zu speichern. <br/>
VideLibri umgeht das Problem, dass E-Mailbenachrichtigungen, die von Bibliotheken versandt werden, prinzipiell nicht funktionieren können, indem E-Mailbenachrichtigungen von VideLibri jeden Tag versandt werden, egal ob Ausleihen abzugeben sind oder nicht. Wenn man jeden Tag eine Benachrichtigung kriegt, das <i>keine</i> Bücher abzugeben sind, weiß man, wenn mal keine E-Mail ankommt, dass eventuell welche abzugeben sind. </li>

<li><h3>Alle Büchereien in einer App</h3>
Da sämtliche für einen Bibliothekszugriff nötigen Katalogaddressen und Schnittstellenparameter in XML/Textdateien anstatt im Programmcode stehen, kann jeder jede Webseite und Bibliothek zu VideLibri hinzufügen, ohne etwas im Code von VideLibri zu ändern.
</li>

<li><h3>Open-Source</h3>
Jeder kann VideLibri auch sonst genauso ändern, wie er es haben will, und beliebige Features hinzufügen.<!-- Dies darf nicht mit dem Hinzufügen neuer Bibliotheken verwechselt werden, denn dies ist orthogonal. Um eine neue Bibliothek hinzuzufügen, muss man VideLibri genauso wenig ändert, wie man Firefox umprogrammieren müsste, um eine Webseite aufzurufen. Bei vielen Systemen reicht es die richtige Webkatalog URL in der GUI einzugeben. Es gibt im kompilierten Quellcode von VideLibri keine Bibliotheksspezifischen Funktionen, sondern die Bibliothekssysteme werden mittels Pattern-Matching halbautomatisch von VideLibri gelernt und mittels XQuery-Skripten für Sonderfälle angepasst.-->
</li>
</ul>

Einige andere Features sind:
<ul>
<li>Abgabezeiten in unterschiedlichen Wochen werden markiert.</li>
<li>Es kann nach beliebigen Medien gesucht werden, sowohl im OPAC einer Bibliothek als auch in Verbundkatalogen mit über 1000 Bibliotheken. </li>
<li>Vormerkungen und Bestellungen im Katalog.</li>
<li>VideLibri wird (je nach Einstellung) bei jedem Systemstart minimiert in der Symbolleiste gestartet.</li>
<li>Es gibt eine Statistik über alle ausgeliehenen Medien<sup class="desktop">D</sup>.</li>
<li>BibTeX-Export für die Erstellung von Literaturverzeichnissen<sup class="desktop">D</sup>.</li>
<li>XML-Import/Export zur Synchronisation von mehreren Geräten und automatisierter .</li>
<li>Automatisches Update<sup class="desktop">D</sup>.</li>
<li>Nahezu bugfrei: Innerhalb von zehn Jahren gab es lediglich 2 Bug-Meldungen <a href="https://sourceforge.net/p/videlibri/tickets/">im Bugtracker</a>.</li>
</ul>

Mit <sup class="desktop">D</sup>-markiere Features sind nur in der Desktopversion enthalten, und fehlen in der Androidversion.<br/>Da VideLibri – entwickelt in 2006 – die weltweit erste Bibliothek-App ist, ist jede weitere Bibliothek-App ein VideLibri Plagiat.<br/><br/>

Es gibt natürlich auch ein paar Nachteile im Vergleich zu den online Web-Katalogen:
<ul>
<li>Es muss erst heruntergeladen und eingerichtet werden, so dass man nicht schnell auf einem fremden Computer seine Ausleihdaten nachsehen kann. (man kann es aber auf einem USB-Stick installieren) </li>
<li>Für bisher nicht getestete Bibliotheken und unbekannte OPAC-Systeme muss VideLibri vor der Verwendung umkonfiguriert werden, so dass nicht alle Büchereien direkt unterstützt werden. Wenn die Bücherei ihre Internetseite plötzlich ändert, lassen sich die Daten daher erstmal nicht mehr aktualisieren. (da alles gecacht ist, zeigt VideLibri aber trotzdem noch so einen Monat lang das nächste Abgabedatum an.) </li>
</ul>

Auf der nächsten Seite kann man sehen, mit welchen <a href="bibliotheken.html">Bibliotheken</a> VideLibri bisher getestet wurde, und auf der Seite danach für welche <a href="opac.html">OPAC-Systeme</a> ein Zugriffs-Template in VideLibri integriert ist, so dass man VideLibri nach Eingabe der Web-Adresse der Bibliothek mit der Bibliothek verwenden kann, auch wenn die Bibliothek bisher noch nicht getestet worden ist. Für eine unbekannte Bibliothek mit einem unbekannten OPAC, kann jeder selbst ein <a href="help/neuebibliothek.html">Zugriffs-Template</a> schreiben.
</content>
    
<content title="Screenshots" id="screenshots">
<center>
<img src="http://sourceforge.net/dbimage.php?id=280463" title="Allgemeine Übersicht über ausgeliehene Bücher (von den Büchereien in Düsseldorf und Aachen)" alt="Allgemeine Übersicht über ausgeliehene Bücher (von den Büchereien in Düsseldorf und Aachen)"/>

<img src="img/xquery.png" alt="Verwendung von XQuery, um die Bücher mit den längsten Titeln zu finden." title="Verwendung von XQuery, um die Bücher mit den längsten Titeln zu finden."/>

<img src="http://sourceforge.net/dbimage.php?id=280465" title="Ausleihstatistik (über alle von meiner Familie in Düsseldorf und Aachen ausgeliehenen Bücher)" alt="Ausleihstatistik (über alle von meiner Familie in Düsseldorf und Aachen ausgeliehenen Bücher)"/>


<img src="http://sourceforge.net/dbimage.php?id=306557" title="Suche in der Digibib. (öffnet sich automatisch nach Doppelklick auf ein ausgeliehenes Buch, und ist z.B.: bei den Stadtbüchereien von Düsseldorf nötig, um mehr als Autor oder Titel angezeigt zu bekommen)" alt="Suche in der Digibib. (öffnet sich automatisch nach Doppelklick auf ein ausgeliehenes Buch, und ist z.B.: bei den Stadtbüchereien von Düsseldorf nötig, um mehr als Autor oder Titel angezeigt zu bekommen)"/>

<img src="http://www.videlibri.de/img/android-tablet-search.png" title="VideLibri Katalog-Suche unter Android"/>

<div>
<img src="https://a.fsdn.com/con/app/proj/videlibri/screenshots/s1.png" title="VideLibri unter Android" alt="VideLibri unter Android"/><br/>
<div style="display: inline-block; max-width: 100%">
<img src="http://sourceforge.net/p/videlibri/screenshot/android-search-list.png" title="VideLibri 1.5 unter Android (Liste der Suchergebnisse)" alt="VideLibri 1.5 unter Android (Liste der Suchergebnisse)"/>
<img src="http://sourceforge.net/p/videlibri/screenshot/android-search-result.png" title="VideLibri 1.5 unter Android (Details eines Suchergebnisses)" alt="VideLibri 1.5 unter Android (Details eines Suchergebnis)"/>
</div>
</div>

</center>
</content>
    
</file>
