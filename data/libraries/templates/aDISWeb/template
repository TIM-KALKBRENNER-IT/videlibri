<?xml version="1.0" encoding="UTF-8"?>
<actions>

<meta>
  <description>Template des aDISWeb-Systems, üblicherweise in Bayern verwendet</description>
  <variable name="server"><description>reiner Servername, (z.B.: ssl.muenchen.de) </description></variable>
  <variable name="startparams" default=""><description>Parameter in der URL nach aDISWeb/app für Server, auf denen mehrere Bibliothekssysteme laufen</description></variable>
</meta>


<action id="connect"></action>

<action id="internal-login"> 
  <s>error-login := ()</s>
  <if test="get('idpSystem')">
    <s>i := 1</s>
    <!-- follow links till we reach the login page -->
    <loop test="$i < 10">
        <page url="{$loginFormPost}"/>
        <pattern><t:switch prioritized="true">
          <p class="form-error">Benutzernummer oder Passwort falsch<t:s>$error-login := ., i := 1000</t:s></p><!-- blb karlsruhe -->

          <!-- seems we already are on the correct page, send request again (not tested with any library) -->
          <td>Keine Ausleihen<t:s>i:=1000</t:s></td>
          <a t:condition="contains(., 'Ausleihe') and contains(@href, 'app;')"><t:s>i:=1000</t:s></a>
       
          <!-- we were logged out ? -->
          <a>Mein Konto<t:s>loginFormPost := .</t:s></a>
  
          <!-- redirection -->
          <form t:condition=" .//@name = ('_eventId_proceed', 'SAMLResponse', 'RelayState') ">
            { let $buttons := ((.//input, .//button)[@type=("submit", "image")], .//button, .//input[@type="button"])
              let $proceed := $buttons[@name = "_eventId_proceed"]
              return
                $loginFormPost := form(., ($proceed, $buttons)[1] )
            }
          </form>
          <meta http-equiv="refresh">{$loginFormPost}</meta>    
          <a t:condition="contains(@href, '?')">{$loginFormPost}</a>
          <form>{$loginFormPost := form(., ((.//input, .//button)[@type=("submit", "image")], .//button, .//input[@type="button"])[1] )}</form>
          <a>{$loginFormPost}</a>
        </t:switch></pattern>
        <s>$i := $i + 1</s>
    </loop>
    
  
  </if>  


  <page test="not(get('idpSystem'))" url="{$loginFormPost}"/>
  
  <if test="empty($error-login)">
    <pattern>
      <template:switch prioritized="true">
        <form>{loginFormPost:=form(.)}
        <h1>Sie sind angemeldet.</h1>
        </form>
  
        <td>Keine Ausleihen</td>
        <a t:condition="contains(., 'Ausleihe') and contains(@href, 'app;')"></a>
        
        <h1>Bitte auch das Passwort angeben<t:s>$error-login := .</t:s></h1>
        <h1>Sie sind nicht mit Ihren Angaben registriert<t:s>$error-login := .</t:s></h1>
        <li>Benutzernummer oder Passwort falsch?<t:s>$error-login := .</t:s></li>
        <h1>Das System kann Sie derzeit nicht anmelden! Angaben sind fehlerhaft!<t:s>$error-login := .</t:s></h1>
        <h1>Anmeldung fehlgeschlagen. Bitte überprüfen Sie Ihre Eingabe.<t:s>$error-login := .</t:s></h1>
        <h1>Die angegebene Lesernummer oder das Passwort ist falsch.<t:s>$error-login := .</t:s></h1>
        
         
        <span class="bnzeig" t:condition="contains(text(), 'Sie sind angemeldet')" /> <!-- sind schon angemeldet. (neuess, ordering!) -->
        
        <div class="message"><div id="R01"><h1>{$error-login}</h1></div></div>
        <span class="alert">{$error-login}</span>
        <input type="password" class="errstate">{$error-login}</input>
         
        <form><select/><select/></form> <!-- munich ordering -->
      </template:switch>
    </pattern>
  </if>
</action>

<action id="update-all">
  <variable name="connected">false()</variable>
  <try>
    <page url="https://{$server}/aDISWeb/app{get('startparams', '')}" templateFile="connected"/>
    <catch errors="http:503"><s>vl:raise("Der Bibliothekskatalog ist momentan temporär nicht erreichbar. Vermutlich werden Wartungsarbeiten durchgeführt (insbesondere bei den VÖBB)")</s></catch>
  </try>
  
  <if test="$connected"><variable name="connectPage">$searchPage</variable></if>

  <page url="{$connectPage}"/>
  <pattern>
    <a>
      <template:meta default-text-matching="regex"/>
      Benutzerkonto|Konto|Anmeldung<t:s>loginForm:=@href</t:s>
    </a>
  </pattern>
  
  <loop test="exists($loginForm)">
    <s>lf := $loginForm, loginForm := ()</s>
    <page url="{$lf}">
      <template><t:switch prioritized="true">
        <input name="$Textfield">{ loginFormPost := 
          let $form := (ancestor::form, //form)[1] (:Aalen has invalid html where the form is not an ancestor of the input:)
          let $buttons := $form//input[@type="submit" and matches(@value, "Anmeld|Login")]
          let $buttons := if ($buttons) then $buttons else "textButton=Anmeldung abschicken" (:vl:raise-internal("Anmeldebutton nicht gefunden"):)
          return form($form, ({"$Textfield": $username, "$Textfield$0": $password}, $buttons[1])) } </input> 
        <input name="j_username">{ loginFormPost := let $form := (ancestor::form, //form)[1] return form($form, ({"j_username": $username, "j_password": $password}, ($form//button)[1])),
                idpSystem := true() }</input> 
        <form><div class="message">Sind Sie Angehörige/r unserer Hochschule?
          <t:s> if (starts-with($username, "E")) then loginForm := form(ancestor::form[1], (.//input)[2])
            else if (starts-with($username, "I")) then (loginForm := form(ancestor::form[1], (.//input)[1]), idpSystem := true() )
            else vl:raise-internal("Diese Bibliothek unterscheidet zwischen internen und externen Benutzern. In VideLibri muss dafür vor der Kontonummer jeweils der Buchstabe I oder E eingefügt werden. ")
          </t:s>
        </div></form>
        <form><div class="message">vl:raise(.)</div></form>
        <form t:condition=" .//@name = ('_eventId_proceed', 'SAMLResponse', 'RelayState') ">
        { $loginFormPost := $lf, $idpSystem := true() (:we are logged in SAML but not in OPAC:) }
        </form>
      </t:switch></template>
    </page>
  </loop>
  <call action="internal-login"/>
  <s>
  if (exists($error-login)) then vl:raise-login($error-login) 
  else $first-login := true()
  </s>
 
  
  <page url="{$loginFormPost}" templateFile="accountOverview"/>

  <s>nextSplitTable := false(), $splitIndex := 1, $splitCount := 0, mode:="lend"</s>
  <if test="$kontoPage">
    <page url="{$kontoPage}" templateFile="list"/>
    <loop test="$nextSplitTable">
      <page url="{$nextSplitTable}" templateFile="list"/>
      <s>$splitIndex := $splitIndex + 1, $nextSplitTable := ()</s>
      <if test="$splitIndex <= $splitCount">
        <page url="{$goBackPage}" templateFile="accountOverview"/>
        <page url="{$kontoPage}" templateFile="nextSplitTable"/>
      </if>
    </loop>
    <page url="{$goBackPage}" templateFile="accountOverview"/>
  </if>
  
  <if test="$orderedMagazinePage">
    <s>mode:="orderedMagazine"</s>
    <page url="{$orderedMagazinePage}" templateFile="list"/>
    <page url="{$goBackPage}" templateFile="accountOverview"/>
  </if>
  
  <if test="$providedPage">
    <s>mode:="provided"</s>
    <page url="{$providedPage}" templateFile="list"/>
    <page url="{$goBackPage}" templateFile="accountOverview"/>
  </if>

  <if test="$orderedPage">
    <s>mode:="ordered"</s>
    <page url="{$orderedPage}" templateFile="list"/>
    <page url="{$goBackPage}" templateFile="accountOverview"/>
  </if>
  
  <if test="$requestedPage">
    <s>mode:="requested"</s>
    <page url="{$requestedPage}" templateFile="list"/>
    <page url="{$goBackPage}" templateFile="accountOverview"/>
  </if>

</action>

<action id="renew-list">
  <s>mode:="lend"</s>
  <if test="not($splitCount)">
    <page url="{$kontoPage}" templateFile="list"/>
    <variable name="book-list">string-join(for $book in $renew-books return x"{$book.extendid}=on", "&amp;")</variable> 
    <page url="{$extendFormPost}"> <post value="{$book-list}"/> </page>    
  </if>
  <if test="$splitCount">
    <s>$renew-splits := distinct-values($renew-books ! (.)._splitIndex)</s>
    <loop var="splitIndex" list="$renew-splits">
      <page url="{$kontoPage}" templateFile="list"/>
      <page url="{$nextSplitTable}" templateFile="list"/>
      <variable name="book-list">string-join(for $book in $renew-books[(.)._splitIndex = $splitIndex] return x"{$book.extendid}=on", "&amp;")</variable> 
      <page url="{$extendFormPost}" templateFile="renewed"> <post value="{$book-list}"/> </page>    
      <page url="{$goBackPage}" templateFile="accountOverview"/>
    </loop>
  </if>
  <call action="update-all"/>
</action>



<action id="cancel-list">
  <loop var="mode" list="distinct-values($cancel-books ! (.)._mode)">
    <s>
    page := switch ($mode)
      case 'ordered' return $orderedPage
      case 'requested' return $requestedPage
      case 'orderedMagazine' return $orderedMagazinePage
      case 'provided' return $providedPage
      default return concat("unknown page ", $mode, "NEU AKTUALISIEREN")
    </s>
    <page url="{$page}"/>  
    <pattern><form>{
      cancelFormPost := form(., (.//input[@type = "submit" and contains(@value, "arkierte") and contains(@value, "schen")])[1]),
      cancelFormPost.post := replace($cancelFormPost.post, "[a-zA-Z0-9]+=on&", "")
    }</form></pattern>

  
    <variable name="book-list">string-join(for $book in $cancel-books[(.)._mode = $mode] return  x"{$book.cancelid}=on", "&amp;")</variable> 
    
    <page url="{$cancelFormPost}" templateFile="renewed">
      <post value="{$book-list}"/>
    </page>
    
    <page url="{$goBackPage}" templateFile="accountOverview"/>
  </loop>
  
  <call action="update-all"/>
</action>








 
<action id="gotoindex">
  <loop test="$firstIndex > $targetIndex">
    <page url="{$form.url}" templateFile="searchBasicForm">
      <post value="{$form.post}{$toolbarPostBackward}"/>
    </page>
  </loop>

  <loop test="$lastIndex &lt; $targetIndex and $targetIndex &lt; $search-result-count">
    <page url="{$form.url}" templateFile="search">
      <post value="{$form.post}{$toolbarPostForward}"/>
    </page>
  </loop>
  
</action>

<action id="search-connect">
  <s>connected:=false()</s>
  
  <page url="https://{$server}/aDISWeb/app{get('startparams', '')}" templateFile="connected"/> <!-- some libraries log in directly, some redirect -->
  <page url="{$connectPage}" test="not($connected)" templateFile="connected"/>
  
  <page url="{$searchPage}" templateFile="searchInputForm"/>
</action>

<action id="search">
  <if test="not($connected)">
    <!-- go back to search form -->
    <call action="search-connect"/>
  </if> 
  
  <s>
  connected := false(),
  lastSearchedIndex := 0, 
  search-next-page-available := (), 
  gotDetails_GoBackPage := (),
  toolbarForward := 5,
  toolbarBackward := 4,
  startSearch := form(//form, {|
    { $search-basic-input-year: $book.year },
      for $key in jn:keys($book) where $book($key) and $search-basic-options($key) count $i
       return  {$search-basic-selects[$i]: $search-basic-options($key), $search-basic-inputs[$i]: $book($key)},
      for $key in jn:keys($book) where $book($key) and $search-filter-map($key) 
       return {$search-filter-map($key): $book($key)}
  |})

  </s>

  <page url="{$startSearch}" templateFile="search"/>

  <page test="exists($gotDetails_GoBackPage)" url="{$gotDetails_GoBackPage}" templateFile="search"/>
  
  <s>toolbarBackward := $toolbarForward - 1,
     toolbarPostBackward := x"&amp;%24Toolbar_{$toolbarBackward}.x=0&amp;%24Toolbar_{$toolbarBackward}.y=0",
     toolbarPostForward := x"&amp;%24Toolbar_{$toolbarForward}.x=0&amp;%24Toolbar_{$toolbarForward}.y=0"
  </s>
</action>

<action id="search-next-page">
  <variable>targetIndex := $lastSearchedIndex + 1, $goback := get('goback', ())</variable>
  <choose>
    <when test="$goback and $firstIndex &lt;= $targetIndex and $targetIndex &lt;= $lastIndex">
      <page url="{$goback}" templateFile="search"/>
    </when>
    <otherwise>
      <call action="gotoindex"/>
    </otherwise>
  </choose>
</action>


<action id="search-details">
  <variable name="targetIndex">$book._index * 1</variable> <call action="gotoindex"/>

  <page url="{$form.url}" templateFile="searchDetails">
    <post>{replace($form.post, "selected=", concat("selected=", $book._searchId))}</post>
  </page>
  
  <page url="{$goback}" templateFile="searchBasicForm"/>
  
</action>




<action id="order-single">
  <variable name="targetIndex">$book._index * 1</variable> <call action="gotoindex"/>

  <s>form := form-combine($form, concat("selected=", $book._searchId))</s>
  <call action="internal-order-single"/>
</action>

<action id="internal-order-single">
  <page url="{$form}"/>
  <pattern><form>{form:=form(., (.//input[@type = "submit" and contains(@value, "Bestell")])[1])}</form></pattern>
  
  <s>subBookOnly := false(), error := (), internal-loggedin := true()</s>
  <page url="{$form}" templateFile="orderConfirmation"/>    
  <if test="$subBookOnly"> 
    <page url="{$subBookOnly}"/>
    <pattern>
      <form>
        <t:switch-prioritized>
          <input title="Zurück zur vorherigen Seite">{backButtonName := uri-encode(@name)}</input>
          <input t:condition="contains(@title, 'zur vorherigen Seite')">{backButtonName := uri-encode(@name)}</input>
        </t:switch-prioritized> 
        {goBackPage := form(., x"{$backButtonName}.x=0&{$backButtonName}.y=0")}
        <div id="R06"><div class="aDISListe"><table>
          <tr><th>Band</th><td>{vl:choose("internal-order-volume", "Welcher Band soll bestellt werden?", a/substring(normalize-space(.), 1, 75), a/@href)}</td></tr> 
        </table></div></div>
      </form>
    </pattern>
  </if>
  
  <if test="not(get('internal-loggedin', false())) and not($subBookOnly) and not(exists($error))">
    <call action="internal-login"/>
    <if test="exists($error-login)">
      <s>error := $error-login</s>
      <pattern><form>{$goBackPage}</form></pattern> <!-- this only will lead back to the login page. but if there is a trefferliste-link like on voebb, internal-get-go-back-step will find its way -->
    </if>
    <else>
      <variable name="internal-loggedin">true()</variable>
      <variable name="form">$loginFormPost</variable>
      <pattern href="orderConfirmation"/>
      <if test="exists($error)"> <!-- it thinks the login confirmation is an error -->
       <s>error:=()</s>
       <page url="{$form}" templateFile="orderConfirmation"/>
      </if>
    </else>
  </if>
  

  <if test="$error">
    <call action="internal-get-go-back-step"/>
    <page url="{$goBackPage}" templateFile="searchBasicForm"/>
    <s>vl:raise($error)</s>
  </if>

</action>

<action id="internal-get-go-back-step">
  <page url="{$goBackPage}"/>
  <pattern href="goBackToSearchList"/>
</action>

 
<action id="internal-order-volume">
  <if test="$choose-result instance of xs:decimal">
    <page url="{$goBackPage}" templateFile="searchBasicForm"/>
  </if>
  <if test="$choose-result instance of xs:string">
    <s>form := $choose-result</s>
    <call action="internal-order-single"/>
  </if>
</action>


<action id="internal-order-confirmed">
  <if test="$choose-result instance of xs:decimal">
    <call action="internal-get-go-back-step"/>
    <page url="{$goBackPage}" templateFile="searchBasicForm"/>
  </if>

  <if test="$choose-result instance of xs:string">
    <variable name="form">
    {
      "url": $form.url,
      "method": $form.method,
      "post": replace($form.post, "_DESTINATIONFILLER_", $choose-result)
    }
    </variable>  

    <page url="{$form}" templateFile="orderConfirmed"/>
    <page url="{$form}" templateFile="orderConfirmed"/>
    <page url="{$final-form}"/>

    <pattern href="goBackToSearchList"/>
    <page url="{$goBackPage}" templateFile="searchBasicForm"/>

    <s>if (empty($error)) then book.statusId := "ordered"
       else vl:raise($error)
    </s>
  </if>
</action>

<action id="catalogue">
  <variable name="url" value="https://{$server}/aDISWeb/app{get('startparams', '')}"/>
</action>



</actions>
